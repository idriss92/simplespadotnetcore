// <auto-generated />
using backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace backend.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20180401134815_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Actor", b =>
                {
                    b.Property<int>("ActorID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("MovieID");

                    b.HasKey("ActorID");

                    b.HasIndex("MovieID");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("Models.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BoxDate");

                    b.Property<string>("Cover");

                    b.Property<int?>("RealisatorID");

                    b.Property<string>("Title");

                    b.HasKey("MovieID");

                    b.HasIndex("RealisatorID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Models.Note", b =>
                {
                    b.Property<int>("NoteID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contact");

                    b.Property<int?>("MovieID");

                    b.Property<int>("NoteValue");

                    b.HasKey("NoteID");

                    b.HasIndex("MovieID");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Models.Realisator", b =>
                {
                    b.Property<int>("RealisatorID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("RealisatorID");

                    b.ToTable("Realisators");
                });

            modelBuilder.Entity("Models.Actor", b =>
                {
                    b.HasOne("Models.Movie", "Movie")
                        .WithMany("Actors")
                        .HasForeignKey("MovieID");
                });

            modelBuilder.Entity("Models.Movie", b =>
                {
                    b.HasOne("Models.Realisator", "Realisator")
                        .WithMany("Movies")
                        .HasForeignKey("RealisatorID");
                });

            modelBuilder.Entity("Models.Note", b =>
                {
                    b.HasOne("Models.Movie")
                        .WithMany("Notes")
                        .HasForeignKey("MovieID");
                });
#pragma warning restore 612, 618
        }
    }
}
